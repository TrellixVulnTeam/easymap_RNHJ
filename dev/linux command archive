###########################################################

LINUX COMMAND ARCHIVE

THIS FILE CONTAINS USEFUL LINUX COMMANDS AND PROCEDURES

###########################################################


###########################################################
GENERAL LINUX (BASH) COMMANDS
###########################################################

Change permissions of file
$ chmod NNN dir/file1
$ chmod -R NNN file (recursive)

Get IP address
$ ip addr show


###########################################################
USERS / ACCOUNTS
###########################################################

Login as www-data
$ sudo -u www-data bash

Execute a command as other user (examples with www-data)
$ sudo -u www-data git pull
$ sudo -u www-data ./easymap -n pn -w ins -sim -r mini_chr1 [...]


###########################################################
SECURE SHELL (SSH)
###########################################################

Install server program on computer you want to use as server
$ sudo apt-get install openssh-server

Install client program on computer you want to use as client
$ sudo apt-get install openssh-client

In the client machine, connect to server
$ ssh username@address (example: umh@10.1.28.51)


###########################################################
START DROPBOX
###########################################################
$ ~/.dropbox-dist/dropboxd


###########################################################
HOW TO ERASE HIDDEN TRASH
###########################################################

Find all the places where ubuntu stores trash
$ sudo find / -type d -name *Trash*

In my case:
$ /home/dws/.local/share/Trash

cd to the folder and inspect it. Last time I found a folder called expunged with many folders
inside name with numbers and filled with files of mine owned by www-data.

Delete all files in the expunged dir:
$ sudo rm -rf ~/.local/share/Trash/expunged/*

After that I check free space and has increased back to normal

Other day, disk was filled with Apache log files. This is haw I deleted all the
files in the Apache log folder:
$ sudo rm /var/log/apache2/*


###########################################################
GIT
###########################################################

https://www.youtube.com/watch?v=HVsySz-h9r4

How to gitignore a whole folder (project)

***START A GIT REPOSITORY***

Install git:
$ sudo apt-get install git

Create a github account

Set git account on local machine:
$ git config --global user.name "davidwilson-85"
$ git config --global user.email "dws1985@hotmail.com"

Optional: In Github dashboard, create new repository and give it a name
Go to folder in locar machine where you want to store files

Initialize git in the chosen folder (this turns on tracking by git in the
current repository)
$ git init
> Initialized empty Git repository in /var/www/html/easymap-git/.git/
$ ls -la
> drwxrwxr-x  8 dws      dws      4096 feb 24 14:51 .git

.git is a folder. I no more tracking wanted, simply remove the folder .git
$ rm -rf .git

Tell git where the repository is
$ git remote add origin https://github.com/davidwilson-85/easymap.git

To check the status of your folder
$ git status

To check what changes you have made to code in local machine with respect to repository
$ git diff


***Managing files in repository***

Add file(s) to repository (right before that, it is recommended to update local repository)

Update local repository:
$ git pull origin master

Add files to staging area (= track them)
$ git add testfile.txt
OR
$ git add -A                                          [-A = add all files with changes and untracked files]

Remove files from staging area
$ git remove                                          [Remove all files]
OR
$ git remove testfile.txt 

Commit and send changes to repository
$ git commit -m "Just a test commit"                  [-m = message]
$ git push -u origin master                           [origin = current repository, master = master branch]

Provide username and password

***How to clone a repository in local machine***
$ git clone <url> <where to clone>
Example:
$ git clone https://github.com/davidwilson-85/easymap.git .     [. = current directory]

Make git stop tracking a file
$ git rm --cached <file>

***How to pull repository to local machine = update local repository***

Go to desired folder
Pull all branches (I think)
$ git pull
> Already up-to-date.

Pull only master branch
$ git pull origin master
> From https://github.com/davidwilson-85/easymap
>  * branch            master     -> FETCH_HEAD
> Already up-to-date.

Another option (I don't know what the HEAD branch is)
$ git pull https://github.com/davidwilson-85/easymap.git
> From https://github.com/davidwilson-85/easymap
>  * branch            HEAD       -> FETCH_HEAD
>Already up-to-date.


############################################################################################
APACHE AND PHP INSTALLATION
############################################################################################

﻿Actualizar repositorio apt
$ sudo apt-get update

Instalar Apache
$ sudo apt-get install apache2

Instalar PHP incluyendo componenentes para Apache
$ sudo apt-get install php libapache2-mod-php

Para comprobar instalación de PHP
$ php --version

Restart apache
$ sudo service apache2 restart

Ensure that www-data (apache user) have w (and x?) permissions inside easymap folders


############################################################################################
HOW TO CREATE AMAZON UBUNTU INSTANCE
############################################################################################

-Go to Amazon AWS dashbard > EC2
-Create new instance Ubuntu 16 free tier t2.micro and follow wizard
-Security groups: activate those needed to allow access through HTTP

USEFUL COMMANDS TO WORK WITH AN AMAZON UBUNTU INSTANCE

Connect to an Amazon instance with Ubuntu through ssh
.pem file has to have permissions set to 400 (600?)
$ ssh -i ./dws1985.pem ubuntu@35.158.227.148
Another example (for linux, use the user "ec2-user")
$ ssh -i easymap.pem ec2-user@52.58.201.189
Finish connection
$ logout

Check if Python is installed
$ python

If not, install python2
$ sudo apt-get update
$ sudo apt install python-minimal
This installed Python 2.7.11

If Apache and PHP are not installed, install them (https://www.youtube.com/watch?v=R9CLBImLxng)
$ sudo apt-get install apache2
$ sudo apt-get install php libapache2-mod-php
Check PHP installation
$ php --version
Restart apache
$ sudo service apache2 restart

Install easymap
$ cd var/www/html
$ sudo git clone https://github.com/davidwilson-85/easymap.git
$ sudo ./setup.sh

If easymap is to be used through the web interface, change permissions recursively of the easymap folder

Send files from local machine to instance. The files to send and the detination folder must have
appropriate permissions. Example:
$ sudo scp -i dev/easymap.pem file1 file2 file3 ubuntu@ec2-34-212-16-178.us-west-2.compute.amazonaws.com:/var/www/html/easymap/user_data
Change "ec2-35-167-94-173.us-west-2.compute.amazonaws.com" for the appropriate public DNS

Send files from instance to local machine
$ scp -i easymap.pem ubuntu@ec2-34-212-16-178.us-west-2.compute.amazonaws.com:/var/www/html/easymap/user_data var/www/html/easymap2

If instance gets full:
First check space

df -h --> space left
sudo find / -type f -size +10M -exec ls -lh {} \;
If after removal of files is still full, reboot the instance: E2C, instances, instance-state, reboot



